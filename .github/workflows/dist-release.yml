name: Release Dist Packages

on:
  push:
    paths:
      - 'dist/regular/**'
      - '.github/workflows/dist-release.yml'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract package metadata
        run: |
          set -euo pipefail
          source dist/regular/PKGBUILD
          echo "PKG_NAME=${pkgname}" >> "$GITHUB_ENV"
          echo "PKG_VERSION=${pkgver}" >> "$GITHUB_ENV"
          echo "PKG_RELEASE=${pkgrel}" >> "$GITHUB_ENV"

      - name: Build package and convert with fpm
        run: |
          set -euo pipefail
          docker run --rm -v "$PWD":/workspace -w /workspace archlinux:latest bash -lc '
            set -euo pipefail
            pacman -Syu --noconfirm base-devel git dpkg rpm-org ruby sudo
            gem install --no-document fpm
            useradd -m builder
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/builder
            chown -R builder:builder /workspace
            runuser -u builder -- bash -lc "
              set -euo pipefail
              cd /workspace/dist/regular
              makepkg -s --noconfirm --clean --cleanbuild
              PKG_FILE=$(ls *.pkg.tar.* | head -n1)
              fpm -s pacman -t deb -f "$PKG_FILE"
              fpm -s pacman -t rpm -f "$PKG_FILE"
            "
          '

      - name: Collect artifacts and release metadata
        id: artifacts
        run: |
          set -euo pipefail
          PKG_FILE=$(ls dist/regular/*.pkg.tar.* | head -n1)
          DEB_FILE=$(ls dist/regular/*.deb | head -n1)
          RPM_FILE=$(ls dist/regular/*.rpm | head -n1)
          echo "pkg=$PKG_FILE" >> "$GITHUB_OUTPUT"
          echo "deb=$DEB_FILE" >> "$GITHUB_OUTPUT"
          echo "rpm=$RPM_FILE" >> "$GITHUB_OUTPUT"
          TAG="${PKG_NAME}-v${PKG_VERSION}-${PKG_RELEASE}-${GITHUB_RUN_NUMBER}"
          NAME="${PKG_NAME} ${PKG_VERSION}-${PKG_RELEASE} build ${GITHUB_RUN_NUMBER}"
          echo "RELEASE_TAG=$TAG" >> "$GITHUB_ENV"
          echo "RELEASE_NAME=$NAME" >> "$GITHUB_ENV"

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh release create "$RELEASE_TAG" "${{ steps.artifacts.outputs.pkg }}" "${{ steps.artifacts.outputs.deb }}" "${{ steps.artifacts.outputs.rpm }}" \
            --title "$RELEASE_NAME" \
            --notes "Automated release for commit $GITHUB_SHA"
